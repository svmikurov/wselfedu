========
Overview
========

Применяется паттерн MVC (Model-View-Controller).

Используемые переменные:
------------------------

- ``lookup_conditions`` : `dict` - словарь условий пользователя для
  формирования задания, хранится в базе данных (необязательно),
  модель :obj:`~glossary.models.GlossaryExerciseParams`;
- ``exercise_choices`` : `dict` - словарь возможного выбора для условий:
    - для фильтрации по датам - :obj:`~config.constants.EDGE_PERIODS`;
    - для фильтрации по прогрессу изучения - :obj:`~config.constants.PROGRES_STAGES`;
    - для фильтрации по категории :obj:`~glossary.models.GlossaryCategory`;
    - содержит значения по умолчанию :obj:`~config.constants.DEFAULT_GLOSSARY_PARAMS`.

- ``exercise_params`` : `dict` - json response сервера, который содержит:
    - ``lookup_conditions``
    - ``exercise_choices``
- ``lookup_parameters`` : `tuple[Q, ...]` - кортеж инкапсулированых фильтров запроса к модели,
  формируется контролером при выполнении задания.

Цикл упражнения:
----------------

1. Глоссарий
^^^^^^^^^^^^

Пользователь наполняет коллекцию терминов глоссария.

2. Выборка
^^^^^^^^^^

Пользователь выбирает условия фильтрации терминов для изучения,
что в включает в себя цепочку событий:

- пользователь направляет:
    * запрос на выполнение упражнения.
- сервер:
    * представление извлекает ``lookup_conditions`` из модели;
    * представление отправляет пользователю ``exercise_params``, который содержит:
        * ``lookup_conditions`` - возможные условия формирования задания;
        * ``exercise_choices`` - список выборов для конкретного условия,
          если условие имеет выбор.
- пользователь направляет:
    * запрос на сохранение измененного ``lookup_conditions`` (необязательно);
    * запрос не выполнение упражнения с неизмененным/измененным ``lookup_conditions``.
- сервер:
    * представление выполняет запрос на сохранение измененного
      ``lookup_conditions`` (необязательно);
    * представление создает ``exercise`` - экземпляр контроллера и
      передает ему ``lookup_conditions``;
    * представление через свойство``task_data`` экземпляра получает
      данные задачи и отправляет их пользователю.
- ...

.. todo:

   - обработка ответа пользователя
        - следующая задача
        - знаю / не знаю
        - ``lookup_conditions`` - приходят от клиента

   Думаю этого будет пока достаточно, потом надо подключить редис,
   для интернет версии.
